#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

copyright = '
/* !!!! AUTOGENERATED FILE generated by math_cl.rb !!!!!
 *
 * This file is an image processing operation for GEGL
 *
 * GEGL is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * GEGL is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with GEGL; if not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2017 Janusz Rupar
 *
 * !!!! AUTOGENERATED FILE !!!!!
 */'

a = [
      ['add',       'VALUE',                        'INPUT + VALUE', '0.0f'],
      ['subtract',  'VALUE',                        'INPUT - VALUE', '0.0f'],
      ['multiply',  'VALUE',                        'INPUT * VALUE', '1.0f'],
      ['divide',    'VALUE == 0.0f ? 0.0f : (1.0f / VALUE)', 'INPUT * VALUE', '1.0f'],
      ['gamma',     'VALUE',                        'pow (INPUT, VALUE)', '1.0f']
    ]

a.each do
    |item|

    name     = item[0] + ''
    filename = name + '.cl'

    puts "generating #{filename}"
    file = File.open(filename, 'w')

    name        = item[0]
    check       = item[1]
    formula     = item[2]
    neutral     = item[3]

    file.write copyright
    file.write "

#define CHECK(VALUE)(#{check})
#define FORMULA(INPUT,VALUE)(#{formula})

__kernel void kernel_#{name} (__global const float4     *in,
                              __global       float4     *out,
                                             float       value)
{
  int id = get_global_id(0);
  float val = CHECK(value);
  float4 v = (float4)(val, val, val, #{neutral});
  out[id] = FORMULA(in[id],v);
}

__kernel void kernel_#{name}_aux (__global const float4     *in,
                                  __global       float4     *out,
                                  __global const float      *aux)
{
  int id = get_global_id(0);
  float4 v = (float4)(CHECK(aux[id * 3]), 
                      CHECK(aux[id * 3 + 1]), 
                      CHECK(aux[id * 3 + 2]), 
                      #{neutral});
  out[id] = FORMULA(in[id],v);
}
"
    file.close
    system("python cltostring.py #{filename}")
end
